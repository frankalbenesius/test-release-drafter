name: Deploy Release

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:

  build_and_test:
    name: Build & Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: npm install, build, and test
        env:
          REACT_APP_HELLO: ${{secrets.REACT_APP_HELLO}}
        run: |
          npm install
          npm run build --if-present
          npm test
      - name: upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  deploy_to_staging:
    name: Deploy To Staging
    needs: build_and_test
    environment:
      name: staging
      url: https://test-release-drafter-staging.netlify.app/
    runs-on: ubuntu-latest
    steps:
      - name: download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}
        with:
          args: deploy --dir=build --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_STAGING_SITE_ID"]'
      - name: send slack notification
        env:
          STAGING_URL: https://test-release-drafter-staging.netlify.app/
          GITHUB_WORKFLOW_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        run: |
          curl -s -X POST '${{secrets.SLACK_WEBHOOK_URL}}' \
            -d '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"*Release v1.6 Needs Approval*\n<${{env.STAGING_URL}}|View on Staging>  â†’  <${{env.GITHUB_WORKFLOW_URL}}|View on Github>"}}]}'
   
  deploy_to_production:
    name: Deploy To Production
    needs: deploy_to_staging
    environment:
      name: production
      url: https://test-release-drafter-production.netlify.app/
    runs-on: ubuntu-latest
    steps:
      - name: download build artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_PRODUCTION_SITE_ID }}
        with:
          args: deploy --dir=build --prod
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_PRODUCTION_SITE_ID"]'