name: Deploy Release

on:
  release:
    types: [ published ]
  workflow_dispatch:

jobs:

  deploy_to_staging:
    name: Deploy To Staging
    environment:
      name: staging
      url: https://test-release-drafter-staging.netlify.app/
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: npm install, build, and test
        env:
          REACT_APP_HELLO: ${{secrets.REACT_APP_HELLO}}
        run: |
          npm ci
          npm run build --if-present
          npm test
      - name: deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_STAGING_SITE_ID }}
        with:
          args: deploy --dir=build --prod --message=\"\#${{github.run_number}} ${{github.ref}}\"
      - name: send slack notification
        env:
          STAGING_URL: https://test-release-drafter-staging.netlify.app/
          GITHUB_WORKFLOW_URL: https://github.com/${{github.repository}}/actions/runs/${{github.run_id}}
        run: |
          curl -s -X POST '${{secrets.SLACK_WEBHOOK_URL}}' \
            -d '{"blocks":[{"type":"section","text":{"type":"mrkdwn","text":"*Production Deployment Needs Approval*\n<${{env.STAGING_URL}}|View on Staging>  â†’  <${{env.GITHUB_WORKFLOW_URL}}|View on Github>"}},{"type":"context","elements":[{"type":"plain_text","text":"${{github.repository}}  ${{github.ref}}","emoji":true}]}]}'
   
  deploy_to_production:
    name: Deploy To Production
    needs: deploy_to_staging
    environment:
      name: production
      url: https://test-release-drafter-production.netlify.app/
    runs-on: ubuntu-latest
    steps:
      - name: checkout code
        uses: actions/checkout@v2
      - name: npm install, build, and test
        env:
          REACT_APP_HELLO: ${{secrets.REACT_APP_HELLO}}
        run: |
          npm ci
          npm run build --if-present
          npm test
      - name: deploy to netlify
        uses: netlify/actions/cli@master
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
        with:
          args: deploy --dir=build --prod --message=\"\#${{github.run_number}} ${{github.ref}}\"
          secrets: '["NETLIFY_AUTH_TOKEN", "NETLIFY_PRODUCTION_SITE_ID"]'